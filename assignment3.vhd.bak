library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity assignment3 is
port(clk_in, startstop, updown, reset : in std_logic;
     digit1, digit2: out std_logic_vector(3 downto 0);
     bcd: out std_logic_vector(7 downto 0));
end assignment3;

architecture behavioural of assignment3 is 
signal slowclock, fastclock : std_logic;
signal counter1, counter2 : integer := 0;
signal upcount, downcount : std_logic_vector(3 downto 0);
signal updowncondition : std_logic;

begin
	   frequency_divider : process(clk)
		begin 
			if (rising_edge(clk)) then 
				if (counter1 = 49999999) then
					slowclock <= NOT(slowclock);
					counter1 <= 0;
				else
					counter1 <= counter1 + 1;
				end if;
			end if;
		end process;
		
		frequency_divider2 : process(clk)
		begin 
			if (rising_edge(clk)) then 
				if (counter2 = 500) then
					fastclock <= NOT(fastclock);
					counter2 <= 0;
				else
					counter2 <= counter2 + 1;
				end if;
			end if;
		end process;
		
		if(s
		
		process(fastclock, rst, switch)
			begin
			
			if(rst = '0') then
			    if(updowncondition = '1') then upcount = "0000";
				 else downcount = "";
			end process;
			
		process(slowclock, rst, switch)
		   beig
		


end behavioural;




